#N canvas 288 80 1039 686 10;
#X text 910 -30 Pd for LibPd;
#X text 912 -18 Chris Penny;
#X msg 136 200 delete foo;
#X msg 151 405 delete foo;
#X msg 288 405 delete bar;
#X msg 394 405 delete baz;
#X text -21 -26 [abstractions] - dynamically create & store different
;
#X text 302 -26 subpatches by name.;
#X text 150 362 Initializing and deleting abstractions:;
#X text 536 374 Sending Messages:;
#X msg 648 493 help;
#X msg 647 514 methods;
#X obj 591 137 inlet;
#X obj 591 159 route method1 method2 method3;
#X msg 410 521 test;
#X msg 545 456 view;
#X text 53 26 Create a new abstraction:;
#X text 126 47 init <type> <name>;
#X text 50 117 Send messages to it:;
#X text 50 177 Delete it:;
#X text 509 -6 To work with [abstractions] \, your subpatch must accept
all input through its left inlet and send all output to the left outlet.
Other inlets & outlets will be ignored.;
#X text 510 52 You can't set the arguments - instead use messages to
the inlet.;
#X text 510 97 You can use [route] to separate output into different
categories:;
#X obj 703 281 print UNKNOWN;
#X obj 550 282 print 1;
#X obj 601 282 print 2;
#X obj 652 282 print 3;
#X obj 619 252 route 1 2 3;
#X msg 619 200 1;
#X msg 652 200 2;
#X msg 684 200 3;
#X msg 717 199 4;
#N canvas 738 328 280 264 example 0;
#X obj 29 14 inlet;
#X obj 75 230 outlet;
#X obj 75 208 list trim;
#X obj 29 48 route 1 2 3;
#X obj 29 129 list prepend 1;
#X obj 84 152 list prepend 2;
#X obj 143 174 list prepend 3;
#X msg 29 85 one;
#X msg 86 85 two;
#X msg 143 85 three;
#X connect 0 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 7 0;
#X connect 3 1 8 0;
#X connect 3 2 9 0;
#X connect 3 3 1 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X connect 7 0 4 0;
#X connect 8 0 5 0;
#X connect 9 0 6 0;
#X restore 619 229 pd example;
#X text 49 241 Output is prepended with the abstraction name:;
#X obj 121 274 route foo;
#X obj 121 303 s foo_output;
#X obj 541 568 route foo bar baz;
#X obj 496 600 print FOO;
#X obj 562 600 print BAR;
#X obj 627 600 print BAZ;
#X msg 487 457 reset;
#X msg 138 86 init exp foo;
#X msg 138 145 foo 2;
#X msg 151 381 init mtof foo;
#X msg 394 382 init ftom baz;
#X msg 535 394 foo 60;
#X msg 535 415 foo 127;
#X obj 541 545 abstractions-standalone;
#X msg 288 382 init exp bar;
#X msg 616 395 bar 1;
#X msg 616 415 bar 3.14;
#X msg 692 415 baz 12543.9;
#X msg 692 395 baz 261.626;
#X connect 3 0 47 0;
#X connect 4 0 47 0;
#X connect 5 0 47 0;
#X connect 10 0 47 0;
#X connect 11 0 47 0;
#X connect 12 0 13 0;
#X connect 14 0 47 0;
#X connect 15 0 47 0;
#X connect 27 0 24 0;
#X connect 27 1 25 0;
#X connect 27 2 26 0;
#X connect 27 3 23 0;
#X connect 28 0 32 0;
#X connect 29 0 32 0;
#X connect 30 0 32 0;
#X connect 31 0 32 0;
#X connect 32 0 27 0;
#X connect 34 0 35 0;
#X connect 36 0 37 0;
#X connect 36 1 38 0;
#X connect 36 2 39 0;
#X connect 40 0 47 0;
#X connect 43 0 47 0;
#X connect 44 0 47 0;
#X connect 45 0 47 0;
#X connect 46 0 47 0;
#X connect 47 0 36 0;
#X connect 48 0 47 0;
#X connect 49 0 47 0;
#X connect 50 0 47 0;
#X connect 51 0 47 0;
#X connect 52 0 47 0;
