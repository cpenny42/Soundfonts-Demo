#N canvas 499 79 567 530 10;
#X obj 0 779 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 0 384 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#N canvas 946 439 373 349 META 0;
#X text 1 19 LICENSE SIBSD;
#X text 1 153 LIBRARY cyclone;
#X text 1 134 OUTLET_0 signal;
#X text 1 77 INLET_1 flaot signal;
#X text 1 96 INLET_2 float signal;
#X text 1 58 INLET_0 signal;
#X text 1 115 INLET_3 float signal;
#X text 0 171 VERSION 0.1-alpha57;
#X text 0 189 AUTHOR Krzysztof Czaja;
#X text 1 207 RELEASE_DATE 2002;
#X text 2 226 WEBSITE http://suita.chopin.edu.pl/~czaja/miXed/externs/cyclone.html
;
#X text 2 258 HELP_PATCH_AUTHORS Christoph Kummerer. Revised by Jonathan
Wilkes for Pd-extended 0.42 to conform to the PDDP template. Alex Cleveland
updated this patch for Pd-l2ork version 2013.05.28. Fred Jan Kraan
adapted the patch to pd-extended 2015-02-02;
#X text 1 0 KEYWORDS signal resonant bandpass filter gain frequency
;
#X text 1 38 DESCRIPTION resonant bandpass filter;
#X restore 502 781 pd META;
#X obj 0 554 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 0 591 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 0 660 cnv 3 550 3 empty empty more_info 8 12 0 13 -228856 -1
0;
#N canvas 320 447 428 109 Related_objects 0;
#X obj 0 0 cnv 15 425 20 empty empty empty 3 12 0 14 -204280 -1 0;
#X text 6 1 Related Objects;
#X restore 203 781 pd Related_objects;
#X obj 82 393 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 82 509 cnv 17 3 33 empty empty 3 5 9 0 16 -228856 -162280 0
;
#X obj 0 0 cnv 15 552 40 empty empty reson~ 3 12 0 18 -204280 -1 0
;
#X obj 487 10 reson~;
#X text 111 393 signal;
#X text 208 393 - input signal to send through bandpass filter;
#X obj 82 420 cnv 17 3 33 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X obj 82 464 cnv 17 3 33 empty empty 2 5 9 0 16 -228856 -162280 0
;
#X obj 82 564 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 111 481 float;
#X text 208 427 - set gain;
#X text 111 462 signal;
#X text 208 473 - center frequency;
#X text 111 438 float;
#X text 111 418 signal;
#X text 111 528 float;
#X text 111 509 signal;
#X text 208 520 - set Q \, the range;
#X text 111 564 signal;
#X text 208 564 - filtered output;
#X text 92 600 1) float;
#X text 92 617 2) float;
#X text 92 633 3) float;
#X text 106 674 reson~ implements the following filter equation: y[n]
= gain * (x[n] - r * x[n-2]) + c1 * y[n-1] + c2 * y[n-2] \, where r
\, c1 \, and c2 are parameters calculated from the input center frequency
and Q. Q is the filter bandwidth divided by center frequency. Inputs
can be floats or signals. The specification is similar to the nres
unit generator in cmusic.;
#X obj 81 283 *~ 0.2;
#X floatatom 308 64 0 1 100 0 - - -;
#X msg 170 64 200 \, 10000 4000;
#X obj 82 64 noise~;
#X floatatom 126 65 0 0 10 0 - - -;
#X obj 80 337 output~;
#X obj 170 87 cyclone/Line~ 200;
#X obj 81 204 cyclone/reson~ 1 200 23;
#X text 13 23 Resonant Bandpass filter;
#X text 208 600 - initial gain (default 0);
#X text 208 617 - initial center freq (default 0);
#X text 208 633 - initial Q range (default 0.01);
#X connect 31 0 36 0;
#X connect 31 0 36 1;
#X connect 32 0 38 3;
#X connect 33 0 37 0;
#X connect 34 0 38 0;
#X connect 35 0 38 1;
#X connect 37 0 38 2;
#X connect 38 0 31 0;
